{"ast":null,"code":"var _jsxFileName = \"/Users/annaliu/software model/react-app/src/UploadImage.js\",\n  _s = $RefreshSig$();\n// src/UploadImage.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage({\n  onUpload\n}) {\n  _s();\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const handleImageChange = e => {\n    //resets all \n    setImage(e.target.files[0]);\n    setError(null);\n    setProcessedImage(null);\n  };\n  const fileToBase64 = file => {\n    //converts uploaded image to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n  const handleSubmit = async () => {\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n\n    //api call\n    try {\n      //convert image to base64, append to formData as 'img0'\n      const base64Image = await fileToBase64(image);\n      const formData = new FormData();\n      formData.append('img0', '\"' + base64Image + '\"');\n      const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/', {\n        \"fn_index\": 0,\n        \"data\": [formData[0]],\n        \"session_hash\": \"knwj8al8dei\"\n      }, {\n        \"content-type\": \"application/json\"\n      });\n      console.log(response.status);\n      if (response.status === 200) {\n        const {\n          data\n        } = response.data;\n        const [imageInBase64, additionalInfo] = data;\n        setProcessedImage(imageInBase64);\n        onUpload(response.data); // Call the onUpload callback with the response data\n      } else {\n        setError(response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), processedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: processedImage,\n        alt: \"Processed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImage, \"PXUw7iq9xVRuiDOHj3Rl18fGbHM=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadImage","onUpload","_s","image","setImage","error","setError","processedImage","setProcessedImage","handleImageChange","e","target","files","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleSubmit","base64Image","formData","FormData","append","response","post","console","log","status","data","imageInBase64","additionalInfo","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","src","alt","_c","$RefreshReg$"],"sources":["/Users/annaliu/software model/react-app/src/UploadImage.js"],"sourcesContent":["// src/UploadImage.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction UploadImage({ onUpload }) {\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n\n  const [processedImage, setProcessedImage] = useState(null); \n\n  const handleImageChange = (e) => {\n    //resets all \n    setImage(e.target.files[0]);\n    setError(null);\n    setProcessedImage(null);\n  };\n\n  const fileToBase64 = (file) => {//converts uploaded image to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  const handleSubmit = async () => {\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n\n    //api call\n    try {\n        //convert image to base64, append to formData as 'img0'\n        const base64Image = await fileToBase64(image);\n        const formData = new FormData();\n        formData.append('img0', '\"'+base64Image+'\"');\n        const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/',\n        {\n            \"fn_index\":0,\n            \"data\" : [formData[0]],\n            \"session_hash\": \"knwj8al8dei\"\n        },\n        {\n            \"content-type\": \"application/json\"\n        }\n      );\n      console.log(response.status)\n      if(response.status === 200){\n        const { data } = response.data;\n        const [imageInBase64, additionalInfo] = data;\n        setProcessedImage(imageInBase64);\n        onUpload(response.data); // Call the onUpload callback with the response data\n      }else {\n        setError(response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n      <button onClick={handleSubmit}>Submit</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {processedImage && (\n        <div>\n          <h3>Processed Image:</h3>\n          <img src={processedImage} alt=\"Processed\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UploadImage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMa,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACAN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3BN,QAAQ,CAAC,IAAI,CAAC;IACdE,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMK,YAAY,GAAIC,IAAI,IAAK;IAAC;IAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAACN,IAAI,CAAC;MAC1BI,MAAM,CAACG,MAAM,GAAG,MAAML,OAAO,CAACE,MAAM,CAACI,MAAM,CAAC;MAC5CJ,MAAM,CAACK,OAAO,GAAGlB,KAAK,IAAIY,MAAM,CAACZ,KAAK,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACrB,KAAK,EAAE;MACVG,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;;IAEA;IACA,IAAI;MACA;MACA,MAAMmB,WAAW,GAAG,MAAMZ,YAAY,CAACV,KAAK,CAAC;MAC7C,MAAMuB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,GAAG,GAACH,WAAW,GAAC,GAAG,CAAC;MAC5C,MAAMI,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,qEAAqE,EACvG;QACI,UAAU,EAAC,CAAC;QACZ,MAAM,EAAG,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtB,cAAc,EAAE;MACpB,CAAC,EACD;QACI,cAAc,EAAE;MACpB,CACF,CAAC;MACDK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,MAAM,CAAC;MAC5B,IAAGJ,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAC;QACzB,MAAM;UAAEC;QAAK,CAAC,GAAGL,QAAQ,CAACK,IAAI;QAC9B,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAGF,IAAI;QAC5C1B,iBAAiB,CAAC2B,aAAa,CAAC;QAChClC,QAAQ,CAAC4B,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,MAAK;QACJ5B,QAAQ,CAACuB,QAAQ,CAACI,MAAM,CAAC;MAC3B;IACF,CAAC,CAAC,OAAO5B,KAAK,EAAE;MACd0B,OAAO,CAAC1B,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAOuC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAE/B;IAAkB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnE7C,OAAA;MAAQ8C,OAAO,EAAErB,YAAa;MAAAa,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CvC,KAAK,iBAAIN,OAAA;MAAG+C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAEhC;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDrC,cAAc,iBACbR,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB7C,OAAA;QAAKiD,GAAG,EAAEzC,cAAe;QAAC0C,GAAG,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1C,EAAA,CAxEQF,WAAW;AAAAkD,EAAA,GAAXlD,WAAW;AA0EpB,eAAeA,WAAW;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}