{"ast":null,"code":"var _jsxFileName = \"/Users/annaliu/software model/react-app/src/UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Instructions from './Instructions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage({\n  onUpload\n}) {\n  _s();\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processedImage, setProcessedImage] = useState(null);\n  const handleImageChange = e => {\n    //resets all \n    setImage(e.target.files[0]);\n    setError(null);\n    setProcessedImage(null);\n  };\n  const fileToBase64 = file => {\n    //converts uploaded image to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n  const handleSubmit = async () => {\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n    setLoading(true); // Start loading spinner\n    //api call\n    try {\n      //convert image to base64, add to message payload\n      //session hash is hardcoded for now, will amend later\n      const base64Image = await fileToBase64(image);\n      const payload = {\n        \"fn_index\": 0,\n        \"data\": ['\"' + base64Image + '\"'],\n        \"session_hash\": \"knwj8al8dei\"\n      };\n      const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/', payload, {\n        \"content-type\": \"application/json\"\n      });\n      console.log(response.status);\n      if (response.status === 200) {\n        const {\n          data\n        } = response.data;\n        const [imageInBase64, additionalInfo] = data;\n        setProcessedImage(imageInBase64);\n        onUpload(response.data); // Call the onUpload callback with the response data\n      } else {\n        setError(response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    } finally {\n      setLoading(false); // Stop loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }, this), processedImage && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Processed Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: processedImage,\n            className: \"processed-image\",\n            alt: \"Processed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: additionalInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImage, \"LKcCMCmeThSlgVY33BoA+ZqU444=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","axios","Instructions","jsxDEV","_jsxDEV","UploadImage","onUpload","_s","image","setImage","error","setError","loading","setLoading","processedImage","setProcessedImage","handleImageChange","e","target","files","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleSubmit","base64Image","payload","response","post","console","log","status","data","imageInBase64","additionalInfo","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","style","color","src","alt","_c","$RefreshReg$"],"sources":["/Users/annaliu/software model/react-app/src/UploadImage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Instructions from './Instructions.js';\n\n\nfunction UploadImage({ onUpload }) {\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processedImage, setProcessedImage] = useState(null); \n\n  const handleImageChange = (e) => {\n    //resets all \n    setImage(e.target.files[0]);\n    setError(null);\n    setProcessedImage(null);\n  };\n\n  const fileToBase64 = (file) => {//converts uploaded image to base64\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  const handleSubmit = async () => {\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n\n    setLoading(true); // Start loading spinner\n    //api call\n    try {\n        //convert image to base64, add to message payload\n        //session hash is hardcoded for now, will amend later\n        const base64Image = await fileToBase64(image);\n        const payload = {\"fn_index\":0,\"data\": ['\"'+base64Image+'\"'],\"session_hash\":\"knwj8al8dei\"}\n        const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/',\n        payload,\n        {\n            \"content-type\": \"application/json\"\n        }\n      );\n      console.log(response.status)\n      if(response.status === 200){\n        const { data } = response.data;\n        const [imageInBase64, additionalInfo] = data;\n        setProcessedImage(imageInBase64);\n        onUpload(response.data); // Call the onUpload callback with the response data\n      }else {\n        setError(response.status);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    } finally{\n      setLoading(false); // Stop loading spinner\n    }\n  };\n\n  return (\n    <div>\n      <div className='container'>\n      <div className='column'>\n          <Instructions/>\n        </div>\n        <div className='column'>\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n          <button onClick={handleSubmit} disabled={loading}>\n            {loading ? 'Processing...' : 'Submit'}\n          </button>\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n          {loading && <div className=\"spinner\"></div>} \n          {processedImage && !loading && (\n            <div>\n              <h2>Processed Image:</h2>\n              <img src={processedImage} className='processed-image' alt=\"Processed\" />\n            </div>\n          )}\n        </div>\n        <div className='column'>\n          {additionalInfo}\n        </div>\n      </div>\n      \n    </div>\n  );  \n}\n\nexport default UploadImage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}