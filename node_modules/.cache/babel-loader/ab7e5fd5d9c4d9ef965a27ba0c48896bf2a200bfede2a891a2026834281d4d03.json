{"ast":null,"code":"var _jsxFileName = \"/Users/annaliu/software model/xray-hand-joint-detection-huggingface/react-app/src/UploadImage.js\",\n  _s = $RefreshSig$();\n// src/UploadImage.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadImage({\n  onUpload\n}) {\n  _s();\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('data', image);\n    try {\n      const response = await fetch('http://127.0.0.1:7860/', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      const processedImage = result.data[0];\n      onUpload(processedImage);\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadImage, \"CgBICTbivqJRDo4MrvKzPKEbEqY=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadImage","onUpload","_s","image","setImage","error","setError","handleImageChange","e","target","files","handleSubmit","formData","FormData","append","response","fetch","method","body","result","json","processedImage","data","console","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/annaliu/software model/xray-hand-joint-detection-huggingface/react-app/src/UploadImage.js"],"sourcesContent":["// src/UploadImage.js\n\nimport React, { useState } from 'react';\n\nfunction UploadImage({ onUpload }) {\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleImageChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const handleSubmit = async () => {\n    if (!image) {\n      setError('Please select an image.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('data', image);\n\n    try {\n      const response = await fetch('http://127.0.0.1:7860/', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await response.json();\n      const processedImage = result.data[0];\n      onUpload(processedImage);\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to process image.');\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n      <button onClick={handleSubmit}>Submit</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default UploadImage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,KAAK,EAAE;MACVG,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IAEA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,KAAK,CAAC;IAE9B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpC,MAAMC,cAAc,GAAGF,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;MACrCrB,QAAQ,CAACoB,cAAc,CAAC;IAC1B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEpB;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEhC,OAAA;MAAQiC,OAAO,EAAErB,YAAa;MAAAa,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C1B,KAAK,iBAAIN,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAEnB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAC7B,EAAA,CAtCQF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}