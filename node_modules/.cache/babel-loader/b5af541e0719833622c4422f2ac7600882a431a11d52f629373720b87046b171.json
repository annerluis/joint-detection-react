{"ast":null,"code":"var _jsxFileName = \"/Users/annaliu/software model/xray-hand-joint-detection-huggingface/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setUploadedImage(URL.createObjectURL(e.target.files[0]));\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('img0', file);\n    try {\n      const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const result = response.data;\n      const processedImageUrl = result[0];\n      setMetadata(result[1]);\n\n      // Fetch the processed image\n      const processedImageResponse = await axios.get(processedImageUrl, {\n        responseType: 'blob'\n      });\n      const processedImageBlob = processedImageResponse.data;\n      const processedImageObjectUrl = URL.createObjectURL(processedImageBlob);\n      setProcessedImage(processedImageObjectUrl);\n    } catch (error) {\n      setError('Error processing the image. Please try again.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"X-ray Hand Joint Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), uploadedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: uploadedImage,\n      alt: \"Uploaded\",\n      style: {\n        maxWidth: '100%',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), processedImage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: processedImage,\n        alt: \"Processed\",\n        style: {\n          maxWidth: '100%',\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), metadata && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(metadata, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dc8GtW+VWId0IASqp+XfniLNhtM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","uploadedImage","setUploadedImage","processedImage","setProcessedImage","metadata","setMetadata","error","setError","handleFileChange","e","target","files","URL","createObjectURL","handleUpload","formData","FormData","append","response","post","headers","result","data","processedImageUrl","processedImageResponse","get","responseType","processedImageBlob","processedImageObjectUrl","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","src","alt","style","maxWidth","marginTop","onClick","disabled","color","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/annaliu/software model/xray-hand-joint-detection-huggingface/react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [file, setFile] = useState(null);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setUploadedImage(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('img0', file);\n\n    try {\n      const response = await axios.post('https://darylfunggg-xray-hand-joint-detection.hf.space/api/predict/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      const result = response.data;\n      const processedImageUrl = result[0];\n      setMetadata(result[1]);\n\n      // Fetch the processed image\n      const processedImageResponse = await axios.get(processedImageUrl, { responseType: 'blob' });\n      const processedImageBlob = processedImageResponse.data;\n      const processedImageObjectUrl = URL.createObjectURL(processedImageBlob);\n      setProcessedImage(processedImageObjectUrl);\n\n    } catch (error) {\n      setError('Error processing the image. Please try again.');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>X-ray Hand Joint Detection</h1>\n      <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n      {uploadedImage && <img src={uploadedImage} alt=\"Uploaded\" style={{ maxWidth: '100%', marginTop: '20px' }} />}\n      <button onClick={handleUpload} disabled={!file}>Upload and Process</button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {processedImage && (\n        <>\n          <h2>Processed Image</h2>\n          <img src={processedImage} alt=\"Processed\" style={{ maxWidth: '100%', marginTop: '20px' }} />\n        </>\n      )}\n      {metadata && (\n        <>\n          <h2>Metadata</h2>\n          <pre>{JSON.stringify(metadata, null, 2)}</pre>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}